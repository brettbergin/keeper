version: '3.8'

services:
  keeper:
    build: .
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///keeper.db
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      
      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      
      # AWS KMS Configuration
      - KMS_KEY_ID=${KMS_KEY_ID:-}
      - KMS_KEY_ALIAS=${KMS_KEY_ALIAS:-alias/keeper-production}
      - KMS_REGION=${KMS_REGION:-${AWS_REGION:-us-east-1}}
      - KMS_ENCRYPTION_CONTEXT=${KMS_ENCRYPTION_CONTEXT:-{"application":"keeper","environment":"production"}}
      - ENABLE_KMS_KEY_ROTATION=${ENABLE_KMS_KEY_ROTATION:-true}
      - KMS_DEK_CACHE_TTL=${KMS_DEK_CACHE_TTL:-3600}
      - KMS_MAX_RETRIES=${KMS_MAX_RETRIES:-3}
      
      # Key Management Backend
      - KEY_MANAGEMENT_BACKEND=${KEY_MANAGEMENT_BACKEND:-kms}
      
      # Vault Configuration
      - VAULT_URL=${VAULT_URL:-http://vault:8200}
      - VAULT_TOKEN=${VAULT_TOKEN:-myroot}
      
      # SAML Authentication
      - OKTA_ISSUER=${OKTA_ISSUER:-}
      - OKTA_CLIENT_ID=${OKTA_CLIENT_ID:-}
      - OKTA_CLIENT_SECRET=${OKTA_CLIENT_SECRET:-}
    volumes:
      - keeper_data:/app/instance
      - keeper_logs:/app/logs
    depends_on:
      - vault
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  vault:
    image: vault:1.14
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-keeperroot}
      - MYSQL_DATABASE=keeper
      - MYSQL_USER=keeper
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-keeperpass}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - keeper
    restart: unless-stopped

volumes:
  keeper_data:
  keeper_logs:
  mysql_data: